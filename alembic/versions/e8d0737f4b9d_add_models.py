"""Add Models

Revision ID: e8d0737f4b9d
Revises: 8a9ec8cf53ba
Create Date: 2025-06-17 22:11:09.954970

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import api


# revision identifiers, used by Alembic.
revision: str = 'e8d0737f4b9d'
down_revision: Union[str, None] = '8a9ec8cf53ba'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_permission'))
    )
    with op.batch_alter_table('permission', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_permission_id'), ['id'], unique=False)

    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tag'))
    )
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tag_id'), ['id'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('display_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.Column('disabled', sa.Boolean(), nullable=False),
    sa.Column('google_user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_login', api.core.timezone_handler.UTCDateTime(), nullable=True),
    sa.Column('sub_level', sa.Enum('FREE', 'PRO', 'ENTERPRISE', name='subscriptionlevel'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_id'), ['id'], unique=False)

    op.create_table('project',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_on', api.core.timezone_handler.UTCDateTime(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('CREATED', 'IDEA', 'PLAN', 'ACTIVE', 'COMPLETE', 'ARCHIVED', 'CANCELLED', name='projectstatus'), nullable=False),
    sa.Column('budget', sa.Float(), nullable=False),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.Column('published_on', api.core.timezone_handler.UTCDateTime(), nullable=True),
    sa.Column('showcase', sa.Boolean(), nullable=False),
    sa.Column('duration', sa.Float(), nullable=False),
    sa.Column('start_date', api.core.timezone_handler.UTCDateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], name=op.f('fk_project_created_by_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_project'))
    )
    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_project_id'), ['id'], unique=False)

    op.create_table('token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('access_token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('token_type', sa.Enum('Access', name='tokentype'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_token_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_token'))
    )
    with op.batch_alter_table('token', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_token_id'), ['id'], unique=False)

    op.create_table('upload',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_on', api.core.timezone_handler.UTCDateTime(), nullable=False),
    sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], name=op.f('fk_upload_created_by_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_upload'))
    )
    with op.batch_alter_table('upload', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_upload_id'), ['id'], unique=False)

    op.create_table('user_permission',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], name=op.f('fk_user_permission_permission_id_permission')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_permission_user_id_user')),
    sa.PrimaryKeyConstraint('user_id', 'permission_id', name=op.f('pk_user_permission'))
    )
    op.create_table('collaborator',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name=op.f('fk_collaborator_project_id_project')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_collaborator_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_collaborator'))
    )
    with op.batch_alter_table('collaborator', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_collaborator_id'), ['id'], unique=False)

    op.create_table('expense',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('date', api.core.timezone_handler.UTCDateTime(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name=op.f('fk_expense_project_id_project')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_expense'))
    )
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_expense_id'), ['id'], unique=False)

    op.create_table('like',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name=op.f('fk_like_project_id_project')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_like_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_like'))
    )
    with op.batch_alter_table('like', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_like_id'), ['id'], unique=False)

    op.create_table('projectimage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('upload_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name=op.f('fk_projectimage_project_id_project')),
    sa.ForeignKeyConstraint(['upload_id'], ['upload.id'], name=op.f('fk_projectimage_upload_id_upload')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_projectimage'))
    )
    with op.batch_alter_table('projectimage', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_projectimage_id'), ['id'], unique=False)

    op.create_table('projecttag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name=op.f('fk_projecttag_project_id_project')),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('fk_projecttag_tag_id_tag')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_projecttag'))
    )
    with op.batch_alter_table('projecttag', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_projecttag_id'), ['id'], unique=False)

    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('CREATED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='taskstatus'), nullable=False),
    sa.Column('tier', sa.Enum('TIER_1', 'TIER_2', 'TIER_3', name='tasktier'), nullable=False),
    sa.Column('due_date', api.core.timezone_handler.UTCDateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name=op.f('fk_task_project_id_project')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task'))
    )
    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_task_id'), ['id'], unique=False)

    op.create_table('timelog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', api.core.timezone_handler.UTCDateTime(), nullable=False),
    sa.Column('hours', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name=op.f('fk_timelog_project_id_project')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_timelog_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_timelog'))
    )
    with op.batch_alter_table('timelog', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_timelog_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('timelog', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_timelog_id'))

    op.drop_table('timelog')
    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_task_id'))

    op.drop_table('task')
    with op.batch_alter_table('projecttag', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_projecttag_id'))

    op.drop_table('projecttag')
    with op.batch_alter_table('projectimage', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_projectimage_id'))

    op.drop_table('projectimage')
    with op.batch_alter_table('like', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_like_id'))

    op.drop_table('like')
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_expense_id'))

    op.drop_table('expense')
    with op.batch_alter_table('collaborator', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_collaborator_id'))

    op.drop_table('collaborator')
    op.drop_table('user_permission')
    with op.batch_alter_table('upload', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_upload_id'))

    op.drop_table('upload')
    with op.batch_alter_table('token', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_token_id'))

    op.drop_table('token')
    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_project_id'))

    op.drop_table('project')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_id'))

    op.drop_table('user')
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tag_id'))

    op.drop_table('tag')
    with op.batch_alter_table('permission', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_permission_id'))

    op.drop_table('permission')
    # ### end Alembic commands ###
